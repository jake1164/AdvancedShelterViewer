@page "/"
@using AdvancedShelterViewer.Shared.Services
@inject IFormFactor FormFactor
@inject IJSRuntime JS

<PageTitle>Home</PageTitle>

<h1>Advanced Fallout Shelter Viewer</h1>
<div class="instructions">
    <p>Large Files can take more time to load!</p>
    Drag a save file here (e.g. Vault1.sav) <br />
    or select one here: <br />
    <input type="file" @ref="fileInput" @onchange="LoadFile" />
    <br /><br /><br />
    For PC/Launcher Version the save is in:<br /> "Documents\My Games\Fallout Shelter"
    <br />
    For Windows 10 Store version check this: <a href="https://bethesda.net/community/topic/25405/transfer-vault-from-desktop-version-to-play-anywhere">
        Click
        Here
    </a>
    <br />
    For Steam Version the save is in:<br /> "C:\Users\YOURUSERNAME\AppData\Local\FalloutShelter"
    <br />
    For Android Version the Save is in:<br /> "storage/sdcard/Android/data/com.bethsoft.falloutshelter/files"
    <script>

    </script>

</div>

@code {
    private ElementReference fileInput;
    private async void LoadFile()
    {
        // Using MAUI we should set the default path based on the OS?        
        var content = await JS.InvokeAsync<string>("shelter.readFileAsBase64", fileInput);
        var jsonContent = await JS.InvokeAsync<JsonContent>("Shelter.decryptString", content);
        //DecryptAsync(content);
    }

    /// <summary>
    /* function decrypt(evt, fileName, base64Str) {
    var cipherBits = sjcl.codec.base64.toBits(base64Str);
    var prp = new sjcl.cipher.aes(key);
    var plainBits = sjcl.mode.cbc.decrypt(prp, cipherBits, iv);
    var jsonStr = sjcl.codec.utf8String.fromBits(plainBits);
        try {
        document.getElementById("presetSaveName").value = fileName;
        edit(fileName, JSON.parse(jsonStr));
        } catch (e) {
        throw "Decrypted file does not contain valid JSON: " + e
    }
    }
    */
    /// </summary>
    /// <param name="file"></param>
    private async void DecryptAsync(string content)
    {
        long[] key = { 2815074099, 1725469378, 4039046167, 874293617, 3063605751, 3133984764, 4097598161, 3620741625};
        var iv = await JS.InvokeAsync<int[]>("sjcl.codec.hex.toBits", "7475383967656A693334307438397532");
        var cipherBits = await JS.InvokeAsync<int[]>("sjcl.codec.base64.toBits", content);
        var prp = await JS.InvokeAsync<Object>("sjcl.cipher.aes", key);
        var plainBits = await JS.InvokeAsync<long[]>("sjcl.mode.cbc.decrypt", prp, cipherBits, iv);
        var jsonString = await JS.InvokeAsync<string>("sjcl.codec.utf8String.fromBits", plainBits);
    }
}
